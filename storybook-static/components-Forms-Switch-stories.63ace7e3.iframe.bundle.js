"use strict";(self.webpackChunkmuidev=self.webpackChunkmuidev||[]).push([[3590],{"./src/components/Forms/Switch.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Colors:()=>Colors,ComplexExample:()=>ComplexExample,Controlled:()=>Controlled,Default:()=>Default,Disabled:()=>Disabled,Sizes:()=>Sizes,Variants:()=>Variants,WithDescription:()=>WithDescription,WithError:()=>WithError,WithSuccess:()=>WithSuccess,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Switch_stories});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),use_motion_value=__webpack_require__("./node_modules/framer-motion/dist/es/value/use-motion-value.mjs"),use_spring=__webpack_require__("./node_modules/framer-motion/dist/es/value/use-spring.mjs"),proxy=__webpack_require__("./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs"),use_transform=__webpack_require__("./node_modules/framer-motion/dist/es/value/use-transform.mjs"),AnimatePresence=__webpack_require__("./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"),index_esm=__webpack_require__("./node_modules/react-icons/fi/index.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _excluded=["checked","defaultChecked","label","description","helperText","variant","size","color","icon","iconOn","iconOff","showIcons","disabled","error","success","onChange","className"],Switch=_ref=>{let{checked,defaultChecked,label,description,helperText,variant="default",size="medium",color="primary",icon,iconOn,iconOff,showIcons=!0,disabled=!1,error,success,onChange,className}=_ref,props=(0,objectWithoutProperties.A)(_ref,_excluded);const[isChecked,setIsChecked]=react.useState(void 0!==checked?checked:defaultChecked||!1),[isHovered,setIsHovered]=react.useState(!1),[isFocused,setIsFocused]=react.useState(!1),x=(0,use_motion_value.d)(0),springX=(0,use_spring.z)(x,{damping:20,stiffness:300}),scale=(0,use_spring.z)(1);react.useEffect((()=>{void 0!==checked&&(setIsChecked(checked),x.set(checked?1:0))}),[checked,x]);const sizes={small:{track:"w-8 h-4",thumb:"w-3 h-3",text:"text-sm",label:"mb-1",helper:"mt-1",gap:"gap-2",icon:"w-2 h-2"},medium:{track:"w-10 h-5",thumb:"w-4 h-4",text:"text-base",label:"mb-1.5",helper:"mt-1.5",gap:"gap-3",icon:"w-2.5 h-2.5"},large:{track:"w-12 h-6",thumb:"w-5 h-5",text:"text-lg",label:"mb-2",helper:"mt-2",gap:"gap-4",icon:"w-3 h-3"}},colors={primary:{track:{off:"bg-gray-200",on:"bg-blue-500"},thumb:{off:"bg-white",on:"bg-white"},text:"text-gray-700",helper:"text-gray-500",error:"text-red-500",success:"text-green-500",focus:"ring-blue-500",icon:{off:"text-gray-400",on:"text-blue-500"},disabled:"bg-gray-100 text-gray-400"},secondary:{track:{off:"bg-gray-200",on:"bg-gray-700"},thumb:{off:"bg-white",on:"bg-white"},text:"text-gray-700",helper:"text-gray-500",error:"text-red-500",success:"text-green-500",focus:"ring-gray-500",icon:{off:"text-gray-400",on:"text-gray-700"},disabled:"bg-gray-100 text-gray-400"},white:{track:{off:"bg-gray-600",on:"bg-white"},thumb:{off:"bg-gray-400",on:"bg-gray-800"},text:"text-gray-100",helper:"text-gray-300",error:"text-red-400",success:"text-green-400",focus:"ring-white",icon:{off:"text-gray-500",on:"text-white"},disabled:"bg-gray-700 text-gray-500"}},variants={default:{track:"rounded-full",thumb:"rounded-full shadow-md"},flat:{track:"rounded-none",thumb:"rounded-none shadow-none"},soft:{track:"rounded-full shadow-inner",thumb:"rounded-full shadow-lg"}},getIcon=type=>{if("on"===type&&iconOn)return iconOn;if("off"===type&&iconOff)return iconOff;if(icon)return icon;switch(null==label?void 0:label.toLowerCase()){case"dark mode":case"theme":return"on"===type?index_esm.hkc:index_esm.Wh$;case"notifications":case"alerts":return"on"===type?index_esm.zd:index_esm.EkJ;case"wifi":case"connection":return"on"===type?index_esm.tMZ:index_esm.S$_;case"visibility":case"show":return"on"===type?index_esm.Vap:index_esm._NO;case"sound":case"volume":case"mute":return"on"===type?index_esm.o77:index_esm.cKW;case"lock":case"security":return"on"===type?index_esm.F5$:index_esm.K4k;default:return"on"===type?index_esm.YrT:index_esm.yGN}},handleChange=e=>{if(disabled)return;const newValue=!isChecked;void 0===checked&&(setIsChecked(newValue),x.set(newValue?1:0)),null==onChange||onChange(e,newValue)},OnIcon=getIcon("on"),OffIcon=getIcon("off");return(0,jsx_runtime.jsxs)(proxy.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:"".concat(className||""),children:[(0,jsx_runtime.jsxs)("div",{className:"\n        inline-flex items-center\n        ".concat(sizes[size].gap,"\n        ").concat(disabled?"opacity-50 cursor-not-allowed":"cursor-pointer","\n      "),children:[(0,jsx_runtime.jsxs)(proxy.P.div,(0,objectSpread2.A)((0,objectSpread2.A)({role:"switch",tabIndex:disabled?-1:0,"aria-checked":isChecked,"aria-label":label,onClick:handleChange,onKeyDown:e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),handleChange(e))},onMouseEnter:()=>{disabled||(setIsHovered(!0),scale.set(1.05))},onMouseLeave:()=>{setIsHovered(!1),scale.set(1)},onFocus:()=>{disabled||(setIsFocused(!0),scale.set(1.05))},onBlur:()=>{setIsFocused(!1),scale.set(1)},animate:{scale},className:"\n            relative\n            inline-flex\n            flex-shrink-0\n            ".concat(sizes[size].track,"\n            ").concat(variants[variant].track,"\n            ").concat(isChecked?colors[color].track.on:colors[color].track.off,"\n            ").concat(disabled?colors[color].disabled:"","\n            ").concat(error?"ring-2 ring-red-500":"","\n            ").concat(success?"ring-2 ring-green-500":"","\n            ").concat(isFocused?"ring-2 ".concat(colors[color].focus):"","\n            transition-colors\n            duration-200\n            ease-in-out\n            focus:outline-none\n            focus:ring-2\n            focus:ring-offset-2\n          ")},props),{},{children:[showIcons&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{className:"\n                absolute\n                inset-y-0\n                left-0\n                flex\n                items-center\n                justify-center\n                w-1/2\n                opacity-".concat(isChecked?"0":"100","\n                transition-opacity\n                duration-200\n                ").concat(colors[color].icon.off,"\n              "),children:(0,jsx_runtime.jsx)(OffIcon,{className:sizes[size].icon})}),(0,jsx_runtime.jsx)("span",{className:"\n                absolute\n                inset-y-0\n                right-0\n                flex\n                items-center\n                justify-center\n                w-1/2\n                opacity-".concat(isChecked?"100":"0","\n                transition-opacity\n                duration-200\n                ").concat(colors[color].icon.on,"\n              "),children:(0,jsx_runtime.jsx)(OnIcon,{className:sizes[size].icon})})]}),(0,jsx_runtime.jsx)(proxy.P.span,{className:"\n              pointer-events-none\n              ".concat(sizes[size].thumb,"\n              ").concat(variants[variant].thumb,"\n              ").concat(isChecked?colors[color].thumb.on:colors[color].thumb.off,"\n              absolute\n              top-1/2\n              transform\n              -translate-y-1/2\n            "),style:{x:(0,use_transform.G)(springX,[0,1],[2,4*parseFloat(sizes[size].track.split("w-")[1])-4*parseFloat(sizes[size].thumb.split("w-")[1])-2])}})]})),(label||description)&&(0,jsx_runtime.jsxs)(proxy.P.div,{initial:{opacity:0,x:20},animate:{opacity:1,x:0},children:[label&&(0,jsx_runtime.jsx)("div",{className:"\n                font-medium\n                ".concat(sizes[size].text,"\n                ").concat(colors[color].text,"\n              "),children:label}),description&&(0,jsx_runtime.jsx)("div",{className:"\n                ".concat(sizes[size].text,"\n                ").concat(colors[color].helper,"\n              "),children:description})]})]}),(helperText||error||success)&&(0,jsx_runtime.jsx)(AnimatePresence.N,{mode:"wait",children:(0,jsx_runtime.jsx)(proxy.P.p,{initial:{opacity:0,y:-10},animate:{opacity:1,y:0},exit:{opacity:0,y:-10},className:"\n              ".concat(sizes[size].text,"\n              ").concat(sizes[size].helper,"\n              ").concat(error?colors[color].error:success?colors[color].success:colors[color].helper,"\n            "),children:error||success||helperText},error||success||helperText)})]})},Forms_Switch=Switch;Switch.__docgenInfo={description:"",methods:[],displayName:"Switch",props:{variant:{defaultValue:{value:"'default'",computed:!1},description:"Visual style variant",type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'flat'",computed:!1},{value:"'soft'",computed:!1}]},required:!1},size:{defaultValue:{value:"'medium'",computed:!1},description:"Size preset",type:{name:"enum",value:[{value:"'small'",computed:!1},{value:"'medium'",computed:!1},{value:"'large'",computed:!1}]},required:!1},color:{defaultValue:{value:"'primary'",computed:!1},description:"Color theme",type:{name:"enum",value:[{value:"'primary'",computed:!1},{value:"'secondary'",computed:!1},{value:"'white'",computed:!1}]},required:!1},showIcons:{defaultValue:{value:"true",computed:!1},description:"Whether to show track icons",type:{name:"bool"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"Whether the switch is disabled",type:{name:"bool"},required:!1},checked:{description:"Whether the switch is checked (controlled)",type:{name:"bool"},required:!1},defaultChecked:{description:"Default checked state (uncontrolled)",type:{name:"bool"},required:!1},label:{description:"Switch label",type:{name:"string"},required:!1},description:{description:"Additional description",type:{name:"string"},required:!1},helperText:{description:"Helper text",type:{name:"string"},required:!1},icon:{description:"Custom icon component",type:{name:"elementType"},required:!1},iconOn:{description:"Custom icon for checked state",type:{name:"elementType"},required:!1},iconOff:{description:"Custom icon for unchecked state",type:{name:"elementType"},required:!1},error:{description:"Error message",type:{name:"string"},required:!1},success:{description:"Success message",type:{name:"string"},required:!1},onChange:{description:"Change handler",type:{name:"func"},required:!1},className:{description:"Additional CSS classes",type:{name:"string"},required:!1}}};const Switch_stories={title:"Forms/Switch",component:Forms_Switch,parameters:{layout:"centered",docs:{description:{component:"A versatile switch (toggle) component with animations and rich features."}}},argTypes:{variant:{control:"select",options:["default","flat","soft"],description:"Visual style variant"},size:{control:"select",options:["small","medium","large"],description:"Size preset"},color:{control:"select",options:["primary","secondary","white"],description:"Color theme"}}},Default={args:{label:"Notifications",description:"Receive email notifications",helperText:"Toggle to enable notifications",onChange:(e,checked)=>console.log("Switch toggled:",checked)}},Controlled=()=>{const[checked,setChecked]=react.useState(!1);return(0,jsx_runtime.jsx)(Forms_Switch,{label:"Dark Mode",description:"Enable dark mode theme",checked,onChange:(e,checked)=>setChecked(checked)})},Variants=()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-8",children:[(0,jsx_runtime.jsx)(Forms_Switch,{variant:"default",label:"Default variant",description:"Classic switch style"}),(0,jsx_runtime.jsx)(Forms_Switch,{variant:"flat",label:"Flat variant",description:"Minimal switch style"}),(0,jsx_runtime.jsx)(Forms_Switch,{variant:"soft",label:"Soft variant",description:"Smooth switch style"})]}),Sizes=()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-8",children:[(0,jsx_runtime.jsx)(Forms_Switch,{size:"small",label:"Small size",description:"Compact switch"}),(0,jsx_runtime.jsx)(Forms_Switch,{size:"medium",label:"Medium size",description:"Default switch"}),(0,jsx_runtime.jsx)(Forms_Switch,{size:"large",label:"Large size",description:"Large switch"})]}),Colors=()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-8",children:[(0,jsx_runtime.jsx)(Forms_Switch,{color:"primary",label:"Primary color",description:"Main theme color"}),(0,jsx_runtime.jsx)(Forms_Switch,{color:"secondary",label:"Secondary color",description:"Alternative theme color"}),(0,jsx_runtime.jsx)("div",{className:"p-8 bg-gray-800 rounded-lg",children:(0,jsx_runtime.jsx)(Forms_Switch,{color:"white",label:"White color",description:"Light theme color"})})]}),WithDescription={args:{label:"Auto-save",description:"Automatically save your changes as you work",helperText:"Changes will be saved every 5 minutes"}},Disabled={args:{label:"Maintenance Mode",description:"System is under maintenance",disabled:!0,helperText:"This feature is currently disabled"}},WithError={args:{label:"Premium Features",description:"Enable premium features",error:"Subscription required to enable this feature"}},WithSuccess={args:{label:"Account Verified",description:"Your account is verified",success:"All features are now available",defaultChecked:!0}},ComplexExample=()=>{const[settings,setSettings]=react.useState({notifications:!0,darkMode:!1,autoSave:!0,analytics:!1}),handleChange=setting=>(e,checked)=>{setSettings((prev=>(0,objectSpread2.A)((0,objectSpread2.A)({},prev),{},{[setting]:checked})))};return(0,jsx_runtime.jsxs)("div",{className:"space-y-6 p-6 bg-white rounded-lg shadow-lg max-w-md",children:[(0,jsx_runtime.jsx)("h2",{className:"text-xl font-semibold text-gray-900",children:"Account Settings"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(Forms_Switch,{variant:"soft",color:"primary",size:"medium",label:"Notifications",description:"Receive email and push notifications",checked:settings.notifications,onChange:handleChange("notifications"),helperText:settings.notifications?"Notifications are enabled":"You may miss important updates"}),(0,jsx_runtime.jsx)(Forms_Switch,{variant:"soft",color:"primary",size:"medium",label:"Dark Mode",description:"Use dark theme across the app",checked:settings.darkMode,onChange:handleChange("darkMode")}),(0,jsx_runtime.jsx)(Forms_Switch,{variant:"soft",color:"primary",size:"medium",label:"Auto-save",description:"Automatically save your work",checked:settings.autoSave,onChange:handleChange("autoSave"),success:settings.autoSave?"Your work will be saved automatically":null}),(0,jsx_runtime.jsx)(Forms_Switch,{variant:"soft",color:"primary",size:"medium",label:"Analytics",description:"Share anonymous usage data",checked:settings.analytics,onChange:handleChange("analytics"),error:settings.analytics?null:"Analytics help us improve the app"})]}),(0,jsx_runtime.jsx)("div",{className:"pt-4 border-t border-gray-200",children:(0,jsx_runtime.jsxs)("p",{className:"text-sm text-gray-500",children:["Last updated: ",(new Date).toLocaleDateString()]})})]})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Notifications',\n    description: 'Receive email notifications',\n    helperText: 'Toggle to enable notifications',\n    onChange: (e, checked) => console.log('Switch toggled:', checked)\n  }\n}",...Default.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'() => {\n  const [checked, setChecked] = React.useState(false);\n  return <Switch label="Dark Mode" description="Enable dark mode theme" checked={checked} onChange={(e, checked) => setChecked(checked)} />;\n}',...Controlled.parameters?.docs?.source}}},Variants.parameters={...Variants.parameters,docs:{...Variants.parameters?.docs,source:{originalSource:'() => <div className="space-y-8">\n    <Switch variant="default" label="Default variant" description="Classic switch style" />\n    <Switch variant="flat" label="Flat variant" description="Minimal switch style" />\n    <Switch variant="soft" label="Soft variant" description="Smooth switch style" />\n  </div>',...Variants.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'() => <div className="space-y-8">\n    <Switch size="small" label="Small size" description="Compact switch" />\n    <Switch size="medium" label="Medium size" description="Default switch" />\n    <Switch size="large" label="Large size" description="Large switch" />\n  </div>',...Sizes.parameters?.docs?.source}}},Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:'() => <div className="space-y-8">\n    <Switch color="primary" label="Primary color" description="Main theme color" />\n    <Switch color="secondary" label="Secondary color" description="Alternative theme color" />\n    <div className="p-8 bg-gray-800 rounded-lg">\n      <Switch color="white" label="White color" description="Light theme color" />\n    </div>\n  </div>',...Colors.parameters?.docs?.source}}},WithDescription.parameters={...WithDescription.parameters,docs:{...WithDescription.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Auto-save',\n    description: 'Automatically save your changes as you work',\n    helperText: 'Changes will be saved every 5 minutes'\n  }\n}",...WithDescription.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Maintenance Mode',\n    description: 'System is under maintenance',\n    disabled: true,\n    helperText: 'This feature is currently disabled'\n  }\n}",...Disabled.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Premium Features',\n    description: 'Enable premium features',\n    error: 'Subscription required to enable this feature'\n  }\n}",...WithError.parameters?.docs?.source}}},WithSuccess.parameters={...WithSuccess.parameters,docs:{...WithSuccess.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Account Verified',\n    description: 'Your account is verified',\n    success: 'All features are now available',\n    defaultChecked: true\n  }\n}",...WithSuccess.parameters?.docs?.source}}},ComplexExample.parameters={...ComplexExample.parameters,docs:{...ComplexExample.parameters?.docs,source:{originalSource:'() => {\n  const [settings, setSettings] = React.useState({\n    notifications: true,\n    darkMode: false,\n    autoSave: true,\n    analytics: false\n  });\n  const handleChange = setting => (e, checked) => {\n    setSettings(prev => ({\n      ...prev,\n      [setting]: checked\n    }));\n  };\n  return <div className="space-y-6 p-6 bg-white rounded-lg shadow-lg max-w-md">\n      <h2 className="text-xl font-semibold text-gray-900">\n        Account Settings\n      </h2>\n      <div className="space-y-4">\n        <Switch variant="soft" color="primary" size="medium" label="Notifications" description="Receive email and push notifications" checked={settings.notifications} onChange={handleChange(\'notifications\')} helperText={settings.notifications ? \'Notifications are enabled\' : \'You may miss important updates\'} />\n        <Switch variant="soft" color="primary" size="medium" label="Dark Mode" description="Use dark theme across the app" checked={settings.darkMode} onChange={handleChange(\'darkMode\')} />\n        <Switch variant="soft" color="primary" size="medium" label="Auto-save" description="Automatically save your work" checked={settings.autoSave} onChange={handleChange(\'autoSave\')} success={settings.autoSave ? \'Your work will be saved automatically\' : null} />\n        <Switch variant="soft" color="primary" size="medium" label="Analytics" description="Share anonymous usage data" checked={settings.analytics} onChange={handleChange(\'analytics\')} error={!settings.analytics ? \'Analytics help us improve the app\' : null} />\n      </div>\n      <div className="pt-4 border-t border-gray-200">\n        <p className="text-sm text-gray-500">\n          Last updated: {new Date().toLocaleDateString()}\n        </p>\n      </div>\n    </div>;\n}',...ComplexExample.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Controlled","Variants","Sizes","Colors","WithDescription","Disabled","WithError","WithSuccess","ComplexExample"]}}]);